{application,ethereum_jsonrpc,
             [{modules,['Elixir.EthereumJSONRPC',
                        'Elixir.EthereumJSONRPC.Anvil',
                        'Elixir.EthereumJSONRPC.Application',
                        'Elixir.EthereumJSONRPC.Arbitrum',
                        'Elixir.EthereumJSONRPC.Arbitrum.Constants.Contracts',
                        'Elixir.EthereumJSONRPC.Arbitrum.Constants.Events',
                        'Elixir.EthereumJSONRPC.Besu',
                        'Elixir.EthereumJSONRPC.Besu.Trace',
                        'Elixir.EthereumJSONRPC.Besu.Traces',
                        'Elixir.EthereumJSONRPC.Block',
                        'Elixir.EthereumJSONRPC.Block.ByHash',
                        'Elixir.EthereumJSONRPC.Block.ByNephew',
                        'Elixir.EthereumJSONRPC.Block.ByNumber',
                        'Elixir.EthereumJSONRPC.Block.ByTag',
                        'Elixir.EthereumJSONRPC.Blocks',
                        'Elixir.EthereumJSONRPC.Contract',
                        'Elixir.EthereumJSONRPC.DecodeError',
                        'Elixir.EthereumJSONRPC.DecodeError.Request',
                        'Elixir.EthereumJSONRPC.DecodeError.Response',
                        'Elixir.EthereumJSONRPC.ERC20',
                        'Elixir.EthereumJSONRPC.Encoder',
                        'Elixir.EthereumJSONRPC.Erigon',
                        'Elixir.EthereumJSONRPC.FetchedBalance',
                        'Elixir.EthereumJSONRPC.FetchedBalances',
                        'Elixir.EthereumJSONRPC.FetchedBeneficiaries',
                        'Elixir.EthereumJSONRPC.FetchedBeneficiary',
                        'Elixir.EthereumJSONRPC.FetchedCode',
                        'Elixir.EthereumJSONRPC.FetchedCodes',
                        'Elixir.EthereumJSONRPC.Filecoin',
                        'Elixir.EthereumJSONRPC.Geth',
                        'Elixir.EthereumJSONRPC.Geth.Call',
                        'Elixir.EthereumJSONRPC.Geth.Calls',
                        'Elixir.EthereumJSONRPC.Geth.PolygonTracer',
                        'Elixir.EthereumJSONRPC.Geth.Tracer',
                        'Elixir.EthereumJSONRPC.HTTP',
                        'Elixir.EthereumJSONRPC.HTTP.HTTPoison',
                        'Elixir.EthereumJSONRPC.HTTP.Helper',
                        'Elixir.EthereumJSONRPC.HTTP.Tesla',
                        'Elixir.EthereumJSONRPC.IPC',
                        'Elixir.EthereumJSONRPC.Log',
                        'Elixir.EthereumJSONRPC.Logs',
                        'Elixir.EthereumJSONRPC.NFT',
                        'Elixir.EthereumJSONRPC.Nethermind',
                        'Elixir.EthereumJSONRPC.Nethermind.Trace',
                        'Elixir.EthereumJSONRPC.Nethermind.Trace.Action',
                        'Elixir.EthereumJSONRPC.Nethermind.Trace.Result',
                        'Elixir.EthereumJSONRPC.Nethermind.Traces',
                        'Elixir.EthereumJSONRPC.Nonce',
                        'Elixir.EthereumJSONRPC.Nonces',
                        'Elixir.EthereumJSONRPC.PendingTransaction',
                        'Elixir.EthereumJSONRPC.Prometheus.Instrumenter',
                        'Elixir.EthereumJSONRPC.RSK',
                        'Elixir.EthereumJSONRPC.RSK.Trace',
                        'Elixir.EthereumJSONRPC.RSK.Traces',
                        'Elixir.EthereumJSONRPC.Receipt',
                        'Elixir.EthereumJSONRPC.Receipts',
                        'Elixir.EthereumJSONRPC.Receipts.ByBlockNumber',
                        'Elixir.EthereumJSONRPC.Receipts.ByTransactionHash',
                        'Elixir.EthereumJSONRPC.RequestCoordinator',
                        'Elixir.EthereumJSONRPC.RollingWindow',
                        'Elixir.EthereumJSONRPC.SignedAuthorization',
                        'Elixir.EthereumJSONRPC.Subscription',
                        'Elixir.EthereumJSONRPC.TraceBlock',
                        'Elixir.EthereumJSONRPC.TraceReplayBlockTransactions',
                        'Elixir.EthereumJSONRPC.Tracer',
                        'Elixir.EthereumJSONRPC.Transaction',
                        'Elixir.EthereumJSONRPC.Transactions',
                        'Elixir.EthereumJSONRPC.Transport',
                        'Elixir.EthereumJSONRPC.Uncle',
                        'Elixir.EthereumJSONRPC.Uncles',
                        'Elixir.EthereumJSONRPC.Utility.CommonHelper',
                        'Elixir.EthereumJSONRPC.Utility.EndpointAvailabilityChecker',
                        'Elixir.EthereumJSONRPC.Utility.EndpointAvailabilityObserver',
                        'Elixir.EthereumJSONRPC.Utility.RangesHelper',
                        'Elixir.EthereumJSONRPC.Variant',
                        'Elixir.EthereumJSONRPC.WebSocket',
                        'Elixir.EthereumJSONRPC.WebSocket.Registration',
                        'Elixir.EthereumJSONRPC.WebSocket.RetryWorker',
                        'Elixir.EthereumJSONRPC.WebSocket.Supervisor',
                        'Elixir.EthereumJSONRPC.WebSocket.WebSocketClient',
                        'Elixir.EthereumJSONRPC.WebSocket.WebSocketClient.Options',
                        'Elixir.EthereumJSONRPC.Withdrawal',
                        'Elixir.EthereumJSONRPC.Withdrawals',
                        'Elixir.EthereumJSONRPC.Zilliqa',
                        'Elixir.EthereumJSONRPC.Zilliqa.AggregateQuorumCertificate',
                        'Elixir.EthereumJSONRPC.Zilliqa.Helper',
                        'Elixir.EthereumJSONRPC.Zilliqa.NestedQuorumCertificates',
                        'Elixir.EthereumJSONRPC.Zilliqa.QuorumCertificate',
                        'Elixir.EthereumJSONRPC.ZkSync.Constants.Contracts']},
              {compile_env,[{explorer,[chain_type],{ok,default}}]},
              {optional_applications,[]},
              {applications,[kernel,stdlib,elixir,logger,tesla,certifi,cowboy,
                             ex_keccak,httpoison,jason,logger_file_backend,
                             prometheus_ex,spandex,spandex_datadog,timex,
                             ex_abi,ssl_verify_fun,decimal,decorator,hackney,
                             poolboy,logger_json,utils,websockex]},
              {description,"Ethereum JSONRPC client."},
              {registered,[]},
              {vsn,"9.1.0"},
              {mod,{'Elixir.EthereumJSONRPC.Application',[]}}]}.
